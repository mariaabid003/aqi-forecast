name: Run AQI Forecasting Pipeline (Hourly)

on:
  workflow_dispatch:  # manual trigger
  schedule:
    # Runs every hour
    - cron: '0 * * * *'

jobs:
  run-pipeline:
    runs-on: ubuntu-latest

    steps:
      # -------------------------
      # 1. Checkout repository
      # -------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      # 2. Set up Python 3.10
      # -------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # -------------------------
      # 3. Cache pip dependencies
      # -------------------------
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # -------------------------
      # 4. Install dependencies
      # -------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          grep -v apache-airflow requirements.txt > requirements-ci.txt
          pip install -r requirements-ci.txt
          pip install "hopsworks[python]" || pip install confluent-kafka

      # -------------------------
      # 5. Run Feature Backfill
      # -------------------------
      - name: Run Feature Backfill
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          AQICN_TOKEN: ${{ secrets.AQICN_TOKEN }}
          aqi_forecast_api_key: ${{ secrets.aqi_forecast_api_key }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: python features/backfill.py

      # -------------------------
      # 6. Generate AQI Prediction
      # -------------------------
      - name: Generate AQI Prediction
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          AQICN_TOKEN: ${{ secrets.AQICN_TOKEN }}
          aqi_forecast_api_key: ${{ secrets.aqi_forecast_api_key }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: |
          mkdir -p data
          python predict.py
          echo "✅ AQI prediction generated successfully"
          cat data/todays_aqi_prediction.csv || echo "⚠️ No prediction CSV found!"

      # -------------------------
      # 7. Upload Artifacts
      # -------------------------
      - name: Upload Artifacts (models, logs, prediction)
        uses: actions/upload-artifact@v4
        with:
          name: aqi-hourly-artifacts
          path: |
            logs/
            data/todays_aqi_prediction.csv
